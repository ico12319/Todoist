// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	"Todo-List/internProject/graphQL_service/internal/url_decorators"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// UrlDecoratorFactory is an autogenerated mock type for the urlDecoratorFactory type
type UrlDecoratorFactory struct {
	mock.Mock
}

type UrlDecoratorFactory_Expecter struct {
	mock *mock.Mock
}

func (_m *UrlDecoratorFactory) EXPECT() *UrlDecoratorFactory_Expecter {
	return &UrlDecoratorFactory_Expecter{mock: &_m.Mock}
}

// CreateUrlDecorator provides a mock function with given fields: _a0, _a1, _a2
func (_m *UrlDecoratorFactory) CreateUrlDecorator(_a0 context.Context, _a1 string, _a2 url_decorators.UrlFilters) url_decorators.QueryParamsRetrievers {
	ret := _m.Called(_a0, _a1, _a2)

	if len(ret) == 0 {
		panic("no return value specified for CreateUrlDecorator")
	}

	var r0 url_decorators.QueryParamsRetrievers
	if rf, ok := ret.Get(0).(func(context.Context, string, url_decorators.UrlFilters) url_decorators.QueryParamsRetrievers); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(url_decorators.QueryParamsRetrievers)
		}
	}

	return r0
}

// UrlDecoratorFactory_CreateUrlDecorator_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateUrlDecorator'
type UrlDecoratorFactory_CreateUrlDecorator_Call struct {
	*mock.Call
}

// CreateUrlDecorator is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 string
//   - _a2 url_decorators.UrlFilters
func (_e *UrlDecoratorFactory_Expecter) CreateUrlDecorator(_a0 interface{}, _a1 interface{}, _a2 interface{}) *UrlDecoratorFactory_CreateUrlDecorator_Call {
	return &UrlDecoratorFactory_CreateUrlDecorator_Call{Call: _e.mock.On("CreateUrlDecorator", _a0, _a1, _a2)}
}

func (_c *UrlDecoratorFactory_CreateUrlDecorator_Call) Run(run func(_a0 context.Context, _a1 string, _a2 url_decorators.UrlFilters)) *UrlDecoratorFactory_CreateUrlDecorator_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(url_decorators.UrlFilters))
	})
	return _c
}

func (_c *UrlDecoratorFactory_CreateUrlDecorator_Call) Return(_a0 url_decorators.QueryParamsRetrievers) *UrlDecoratorFactory_CreateUrlDecorator_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *UrlDecoratorFactory_CreateUrlDecorator_Call) RunAndReturn(run func(context.Context, string, url_decorators.UrlFilters) url_decorators.QueryParamsRetrievers) *UrlDecoratorFactory_CreateUrlDecorator_Call {
	_c.Call.Return(run)
	return _c
}

// NewUrlDecoratorFactory creates a new instance of UrlDecoratorFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUrlDecoratorFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *UrlDecoratorFactory {
	mock := &UrlDecoratorFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
